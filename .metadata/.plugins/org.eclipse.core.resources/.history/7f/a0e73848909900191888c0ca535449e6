package webserver;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.Socket;
import java.nio.file.Files;
import java.util.HashMap;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import util.HttpRequestProcessingUtils;
import util.IOUtils;

public class RequestHandler extends Thread {
    private static final Logger log = LoggerFactory.getLogger(RequestHandler.class);

    private Socket connection;

    public RequestHandler(Socket connectionSocket) {
        this.connection = connectionSocket;
    }

    public void run() {
        log.debug("New Client Connect! Connected IP : {}, Port : {}", connection.getInetAddress(),
                connection.getPort());

        try (InputStream in = connection.getInputStream(); OutputStream out = connection.getOutputStream()) {
        	
        	HttpRequestProcessingUtils hrpu = new HttpRequestProcessingUtils(in);
        	
        	String[] headerInfo = hrpu.getHeaderInfo();
        	Map<String, String> headerDetailInfo = hrpu.getDetailHeaderInfo();
        	
        	String httpMethod = headerInfo[0];
        	String httpUri = headerInfo[1];
        	// String httpVersion = headerInfo[2];
        	
        	Map<String, String> queryString = null;
        	String values = "";
        	
        	
        	if (httpUri.indexOf("?") != -1) {
        		values = httpUri.substring(httpUri.indexOf("?") + 1);
        		httpUri = httpUri.substring(0, httpUri.indexOf("?"));
        		queryString = hrpu.getQueryStringKeyValue(values, "&");
        	}
        	
        	if ("post".equals(httpMethod.toLowerCase())) {
        		values = IOUtils.readData(hrpu.getBr(), Integer.parseInt(headerDetailInfo.get("Content-Length")));
        		queryString = hrpu.getQueryStringKeyValue(values, "&");
        	}
        	
        	if (queryString != null) {
        		log.info("etestsetset: " + queryString.get("userId"));
        		log.info("etestsetset: " + queryString.get("password"));
        		log.info("etestsetset: " + queryString.get("name"));
        		log.info("etestsetset: " + queryString.get("email"));
        		
        	}
        	
        	
            DataOutputStream dos = new DataOutputStream(out);
            
            byte[] body = Files.readAllBytes(new File("./webapp" + httpUri).toPath());
            
            response200Header(dos, body.length);
            responseBody(dos, body);
        } catch (IOException e) {
            log.error(e.getMessage());
        }
    }

    private void response200Header(DataOutputStream dos, int lengthOfBodyContent) {
        try {
            dos.writeBytes("HTTP/1.1 200 OK \r\n");
            dos.writeBytes("Content-Type: text/html;charset=utf-8\r\n");
            dos.writeBytes("Content-Length: " + lengthOfBodyContent + "\r\n");
            dos.writeBytes("\r\n");
        } catch (IOException e) {
            log.error(e.getMessage());
        }
    }

    private void responseBody(DataOutputStream dos, byte[] body) {
        try {
            dos.write(body, 0, body.length);
            dos.flush();
        } catch (IOException e) {
            log.error(e.getMessage());
        }
    }
}