package util;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class HttpRequestProcessingUtils {
	
	private static final Logger log = LoggerFactory.getLogger(HttpRequestProcessingUtils.class);
	
	private BufferedReader br;
	
	private String[] tokens;
	
	private Map<String, String> header = new HashMap<>();
	
	private Map<String, String> param = new HashMap<>();
	
	public HttpRequestProcessingUtils(InputStream inputStream) {
		br = new BufferedReader(new InputStreamReader(inputStream));
	}
	

	public Map<String, String> returnHttpRequestInfo() {
		
		try {		
			String line = "";
			
			tokens = br.readLine().split(" ");
			
			if (tokens[1].indexOf("?") != -1) {
				String[] queryString = tokens[1].substring(0, tokens[1].indexOf("?")).split("&");
				
				
				
			}
			
			// http method
			header.put("HttpMethod", tokens[0]);
			// http url
			header.put("HttpUrl", tokens[1]);
			// http version
			header.put("HttpVersion", tokens[2]);
			
			while (!"".equals(line = br.readLine())) {
				if (line == null) {
					break;
				}
				
				// header 정보 
				tokens = line.split(": ");
				
				header.put(tokens[0], tokens[1]);
			}
			
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		
		return header; 
	}
	
	/*BufferedReader br = new BufferedReader(new InputStreamReader(in));
	
	String line = "";
	String url = "";
	
	line = br.readLine();
	// log.info("line: " + line);
	
	String[] tokens = line.split(" ");
	for (String test : tokens) {
		log.info("test: " + test);
	}
	
	url = tokens[1];
	
	Map<String, String> headers = new HashMap<>();
	
	while (!"".equals(line = br.readLine())) {
		
		if (line == null) {
			return;
		}
	
		// header 정보 저장
		String[] keyValue = line.split(": ");
		headers.put(keyValue[0], keyValue[1]);
		// log.info("keyValue[0]: " + keyValue[0]);
		// log.info("keyValue[1]: " + keyValue[1]);
		
	}*/
	
}
