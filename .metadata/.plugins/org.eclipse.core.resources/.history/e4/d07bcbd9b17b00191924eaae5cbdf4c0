package webserver;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.Socket;
import java.nio.file.Files;
import java.nio.file.InvalidPathException;
import java.util.HashMap;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import model.User;
import util.HttpRequestUtils;
import util.IOUtils;

public class RequestHandler extends Thread {
    private static final Logger log = LoggerFactory.getLogger(RequestHandler.class);

    private Socket connection;

    public RequestHandler(Socket connectionSocket) {
        this.connection = connectionSocket;
    }

    public void run() {
        log.debug("New Client Connect! Connected IP : {}, Port : {}", connection.getInetAddress(),
                connection.getPort());

        try (InputStream in = connection.getInputStream(); OutputStream out = connection.getOutputStream()) {
            // TODO 사용자 요청에 대한 처리는 이 곳에 구현하면 된다.
        	
        	BufferedReader br = new BufferedReader(new InputStreamReader(in));
        	String line;

        	// System.out.println("readData: " + IOUtils.readData(br, 50));
        	
        	int i = 0;
        	String uris = "";
    		while (!"".equals(line = br. readLine())) {
    			if (i == 0) {
    				uris += line + " ";
    			}
    			
    			if (line == null) {
    				return;
    			}
    			i++;
    		}
    		
    		String[] test = uris.split(" ");
    		
    		int queryStringIndex = test[1].indexOf("?"); 
    		
    		
    		if (queryStringIndex != -1) {
    			String url = test[1].substring(0, queryStringIndex);
    			String param = test[1].substring(queryStringIndex + 1);
    			
    			System.out.println("url: " + url);
    			System.out.println("param: " + param);
    			
    			Map<String, String> userInfo = HttpRequestUtils.parseQueryString(param);
    			
    			User user = new User(userInfo.get("userId"),
    								 userInfo.get("password"),
    								 userInfo.get("name"), 
    								 userInfo.get("email"));
    			
    		}
    		byte[] body = Files.readAllBytes(new File("./webapp" + test[1]).toPath());
    		
            DataOutputStream dos = new DataOutputStream(out);
            if (queryStringIndex != -1) {
            	response302Header(dos, body.length);
            } else {
            	response200Header(dos, body.length);
            }
            responseBody(dos, body);
        } catch (IOException e) {
            log.error(e.getMessage());
        } catch (InvalidPathException e) {
        	
		}
    }

    private void response200Header(DataOutputStream dos, int lengthOfBodyContent) {
        try {
            dos.writeBytes("HTTP/1.1 200 OK \r\n");
            dos.writeBytes("Content-Type: text/html;charset=utf-8\r\n");
            dos.writeBytes("Content-Length: " + lengthOfBodyContent + "\r\n");
            dos.writeBytes("\r\n");
        } catch (IOException e) {
            log.error(e.getMessage());
        }
    }
    
    private void response302Header(DataOutputStream dos, int lengthOfBodyContent) {
        try {
        	dos.writeBytes("HTTP/1.1 302 Found \r\n");
        	dos.writeBytes("Location: http://localhost:8282/index.html \r\n");
        } catch (IOException e) {
            log.error(e.getMessage());
        }
    }

    private void responseBody(DataOutputStream dos, byte[] body) {
        try {
            dos.write(body, 0, body.length);
            dos.flush();
        } catch (IOException e) {
            log.error(e.getMessage());
        }
    }
}
