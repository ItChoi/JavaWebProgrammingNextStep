# 흙흙흙흙
	1) Service -> ServiceImpl -> Mapper -> mapper.xml 구조
		- 우선 root-context.xml에서 Controller를 제외한 Service 및 Mapper를 scan 하도록 설정한다.
		그리고 servlet-context.xml에서 Controller를 Scan하도록 하는데, 이 때 주의할 점은 Controller, Sevrice,
		ServiceImpl, Mapper를 한 패키지에 두니까 제대로 읽어들이지 못했다. 그리고 무슨 이유 때문인지는 모르겠지만 자꾸 Deployment
		Assembly에서 추가한 ojdbc6.jar가 사라져서 junit으로 hikari DB 테스트가 성공하는데도 서버가 안켜져서 몇 시간 헤맸다...
		Bean 생성과 의존관계에 대한 구체적인 내용은 이 책이 끝나고 토비의 스프링을 읽으면서 공부해야겠다.
		
		- 위 설정이 완료되면 mapper.xml namespace에 Mapper.java 인터페이스를 연동하여 쓰면 된다~
		
	- Ajax를 이용해서 받아온 데이터 처리하면서 생긴 삽질
		- 로그인을 하면서 Ajax을 이용해 id/pw 정보를 넘겨주고 boolean 타입으로 응답을 주게 만들었다. 근데 자꾸 원하는 데이터가 나오지 않았다.
		단순히 json 데이터로 넘어오겠구나~ 했는데 넘어온 데이터를 console.log로 찍었을 때 <Boolean>false</Boolean> 으로 데이터가 넘어 왔다.
		xml 방식으로 넘어온 것 인데, 생각을 못하고 저 false를 어떻게 뽑아서 써야 되나 하다가 ajax 요청시 dataType을 json으로 주고서야 원하는 결과를
		받아 처리를 할 수 있었다.
		그리고 xml 방식에서 저 false를 사용하려면 html 태그랑 같다고 생각하고 getElementsByTagName("boolean")[0]를 해서
		.textContent로 뽑아오면 된다. 이거로 두시간이나 잡아 먹다니.....하.......... 다음엔 같은 실수를 하지 말아야지~